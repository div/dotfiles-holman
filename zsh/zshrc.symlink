export HOMEBREW_PREFIX=/opt/homebrew

# # shortcut to this dotfiles path is $DOTZSH
export DOTZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/Documents/code

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit && compinit

# all of our zsh files
typeset -U config_files
config_files=($DOTZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files


# Set umask
umask g-w,o-rwx

# If command is a path, cd into it
setopt auto_cd

# Colourfull messages
e_header()  { echo -e "\n\033[1m$@\033[0m"; }
e_success() { echo -e " \033[1;32m✔\033[0m  $@"; }
e_error()   { echo -e " \033[1;31m✖\033[0m  $@"; }

# Croptesting
#source ${ZDOTDIR:-${HOME}}/.config/zsh/frameworks.zsh


# # Load dircolors
# if [ -s ${ZDOTDIR:-${HOME}}/.dircolors ]; then
#   if (( $+commands[gdircolors] )); then
#     eval $(command gdircolors -b ${ZDOTDIR:-${HOME}}/.dircolors)
#   elif (( $+commands[dircolors] )); then
#     eval $(command dircolors -b ${ZDOTDIR:-${HOME}}/.dircolors)
#   fi
# fi
